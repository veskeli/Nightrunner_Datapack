# import all templates
import ./templates/messages.mcbt
import ./templates/scoreboard/settings_scoreboard.mcbt
import ./templates/settings/settings_page.mcbt
import ./templates/log.mcbt
import ./templates/health/set_max_health.mcbt
import ./templates/health/set_temp_health.mcbt
import ./templates/health/add_temp_health.mcbt
import ./templates/mobs/undead_base_values.mcbt
import ./templates/mobs/set_random_score.mcbt
import ./templates/tools/wand_setup.mcbt
import ./templates/tools/sentry_setup.mcbt
import ./templates/raycast.mcbt
# import all javascript files
import ./javascripts/wand_data.js
import ./javascripts/sentry.js
import ./javascripts/utils.js

# Nightrunner
function on_load minecraft:load{
    #=================================================
    # Load all scoreboards
    #=================================================

    #================= internal scoreboard
    scoreboard objectives add nightrunner.internal dummy

    #=================================================
    # Gamerules
    #=================================================
    gamerule commandBlockOutput false
    # gamerule playersSleepingPercentage 50
    gamerule doInsomnia false

    #=================================================
    # Show the welcome message
    #=================================================
    # Show the welcome message (Takes build number [int] and update message [raw])
    welcome 14 Magic Rebalance!
}
#=================================================
# MARK: Settings
#=================================================
dir settings{
    function load minecraft:load{
        scoreboard objectives add Nightrunner_BlockMobs dummy
        # Operators
        scoreboard objectives add Nightrunner_Op dummy
        # open settings trigger
        scoreboard objectives add Open_Nightrunner_Settings trigger

        #================= Join
        scoreboard objectives add Nightrunner_Joined dummy
        scoreboard objectives add Nightrunner_ID dummy

        # First time load
        scoreboard objectives add Nightrunner_FirstTime dummy
        # Check if first time
        execute unless score $Nightrunner Nightrunner_FirstTime matches 1 run function ./first_time
    }
    function first_time{
        # Set the player as first time
        scoreboard players set $Nightrunner Nightrunner_FirstTime 1

        # Disable all systems
        scoreboard players set $Nightrunner Nightrunner_UseReviveSystem 0
        scoreboard players set $Nightrunner Nightrunner_UseHealthSystem 0
        scoreboard players set $Nightrunner Nightrunner_CustomMobsEnabled 0

        function #nightrunner:first_time

        say First time setup
    }
    function settings{
        settings_page 1
    }
    clock join_check 1s{
        # Check if player doesn't have a profile
        execute as @a run execute unless score @s Nightrunner_Joined matches 1 run block join_setup{
            # Set the player as joined
            scoreboard players set @s Nightrunner_Joined 1
            # +1 to the internal id
            scoreboard players add $Nightrunner_Internal_ID Nightrunner_ID 1
            # Set the player id
            scoreboard players operation @s Nightrunner_ID = $Nightrunner_Internal_ID Nightrunner_ID

            # TEMP: Set the player spell distance
            scoreboard players set @s Nightrunner_RangedSpellRange 40

            execute as @s run function #nightrunner:on_join
        }
    }
    function reset_join{
        # Reset the joined status
        scoreboard objectives remove Nightrunner_Joined
        scoreboard objectives remove Nightrunner_ID
        scoreboard objectives add Nightrunner_Joined dummy
        scoreboard objectives add Nightrunner_ID dummy
    }
    function tick minecraft:tick{
        # Allow the player to open the settings if they are op
        execute as @a[scores={Nightrunner_Op=1}] run scoreboard players enable @s Open_Nightrunner_Settings

        # Check if the player ran the settings command
        execute as @a[scores={Open_Nightrunner_Settings=1}] run block open_settings{
            scoreboard players reset @s Open_Nightrunner_Settings
            function nightrunner:settings/settings
        }
    }
    dir toggles{
        function toggle_revive_system{
            # Toggle the revive system
            execute if score $Nightrunner Nightrunner_UseReviveSystem matches 1 run {
                scoreboard players set $Nightrunner Nightrunner_UseReviveSystem 0
                # open settings again
                function ../settings
            } else run {
                scoreboard players set $Nightrunner Nightrunner_UseReviveSystem 1
                # open settings again
                function ../settings
            }
        }
        function toggle_health_system{
            # Toggle the health system
            execute if score $Nightrunner Nightrunner_UseHealthSystem matches 1 run {
                scoreboard players set $Nightrunner Nightrunner_UseHealthSystem 0
                # Reset health to 20
                execute as @a run attribute @s minecraft:generic.max_health base set 20

                # open settings again
                function ../settings
            } else run {
                scoreboard players set $Nightrunner Nightrunner_UseHealthSystem 1
                # open settings again
                function ../settings
            }
        }
        function toggle_custom_mobs{
            # Toggle the custom mobs
            execute if score $Nightrunner Nightrunner_CustomMobsEnabled matches 1 run {
                scoreboard players set $Nightrunner Nightrunner_CustomMobsEnabled 0
                # open settings again
                function ../settings
            } else run {
                scoreboard players set $Nightrunner Nightrunner_CustomMobsEnabled 1
                # open settings again
                function ../settings
            }
        }
    }
}
#=================================================
# MARK: Crafting
#=================================================
dir crafting{
    function load minecraft:load{
        # Click check
        scoreboard objectives add Nightrunner_ClickedBool dummy
    }
    # Copper hopper
    recipe copper_hopper{
        "type": "minecraft:crafting_shaped",
        "pattern": [
            "i i",
            "iSi",
            " i "
        ],
        "key": {
            "i": {
                "item": "minecraft:copper_ingot"
            },
            "S": {
                "item": "minecraft:chest"
            }
        },
        "result": {
            "id": "minecraft:hopper",
            "count": 1
        }
    }

    # MARK: Cauldron Crafting
    dir cauldroncraft{
        function load minecraft:load{
            # Click check
            scoreboard objectives add Nightrunner_ClickedBool dummy
            # Cauldron Check Craftable Amount In Hand
            scoreboard objectives add Nightrunner_CauldronCraftableAmountInHand dummy
            # Cauldron craft first amount
            scoreboard objectives add Nightrunner_CauldronCraftFirstAmount dummy
            # Cauldron craft crafting timer
            scoreboard objectives add Nightrunner_CauldronCraftingTimer dummy
        }
        function cauldroncheck minecraft:tick{
            # TODO: dont use tick but use scoreboard trigger
            execute as @e[type=item_frame,nbt={Tags:["forge_core"],Item:{}}] run block cauldron_check{
                # Check if its on top of a cauldron
                execute at @s run execute if block ~ ~-0.5 ~ #minecraft:cauldrons run return run block{
                    # Check if duplicate
                    execute as @s run execute if entity @e[type=item_display,nbt={Tags:["forge_core"]},distance=..1] run return run block{
                        # cancel
                        execute at @s run function *items/forge_core/summon
                        # Kill the item frame
                        kill @s
                    }

                    # Summon item display
                    execute at @s run summon item_display ~ ~0.5 ~ {billboard:"vertical",item:{id:"minecraft:item_frame",count:1,components:{"minecraft:custom_model_data":1124}},Tags:["forge_core"],transformation:{left_rotation:[0f,0f,0f,1f],right_rotation:[0f,0f,0f,1f],translation:[0f,0f,0f],scale:[0.6f,0.6f,0.6f]}}

                    # Summon interactable (to detect interaction with brewing stand)
                    execute at @s run summon interaction ~ ~ ~ {width:0.75,height:0.75,response:0.75,Tags:["CauldronCraftInteractable"]}
                    # Kill the item frame
                    kill @s
                }

                # cancel
                execute at @s run function *items/forge_core/summon
                # Kill the item frame
                kill @s
            }

            # if Nightrunner_CauldronCraftingTimer entities exist lower the timer
            execute as @e[type=interaction,nbt={Tags:["CauldronCraftInteractable"]},scores={Nightrunner_CauldronCraftingTimer=1..}] run scoreboard players remove @s Nightrunner_CauldronCraftingTimer 1
            # if the timer is 0 then finish the craft
            execute as @e[type=interaction,nbt={Tags:["CauldronCraftInteractable"]},scores={Nightrunner_CauldronCraftingTimer=..0}] run function ./finish_craft
        }
        function right_clicked{
            # Reset advancement
            advancement revoke @s only nightrunner:interacted_with_cauldron_right

            # execute at @s as @n[type=minecraft:interaction,predicate={name of your predicate}] run tag @s add interaction
            execute at @s as @n[type=minecraft:interaction,predicate=nightrunner:interaction_right_clicked] run tag @s add interaction

            # add tag
            tag @s add interaction_player

            # Check wich interaction was clicked
            execute as @e[tag=interaction] run block right_clicked/handle_interaction{
                execute as @s run block check_craft{
                    # Check if already crafting
                    execute as @s run execute if score @s Nightrunner_CauldronCraftingTimer matches 1.. run return 1

                    # Check if the lava cauldron still exists
                    execute as @s at @s run execute unless block ~ ~-1 ~ lava_cauldron run return run block{
                        # Check if the player has the dried rotten flesh in hand
                        execute as @a[limit=1,sort=nearest,nbt={SelectedItem:{id:"minecraft:poisonous_potato",components:{"minecraft:custom_data":{dried_rotten_flesh:true}}}}] run block{
                            tellraw @s [{"text":"The cauldron needs to be filled with lava before crafting with this item.","color":"red"}]
                            tag @s add ErrorShowed
                        }
                    }

                    # Check if the player has the rotten flesh in hand
                    execute as @a[limit=1,sort=nearest,nbt={SelectedItem:{id:"minecraft:poisonous_potato",components:{"minecraft:custom_data":{dried_rotten_flesh:true}}}}] run block check_amount{
                        # Store the amount of rotten flesh in hand
                        execute as @s run execute store result score @s Nightrunner_CauldronCraftableAmountInHand run data get entity @s SelectedItem.count
                        # if the amount is more then 16 we can continue
                        execute if score @s Nightrunner_CauldronCraftableAmountInHand matches 16.. run block amount_exceeded{
                            tag @s add AmountExceeded
                            # TODO: Save the removed amount and if its somehow wrong give it back
                            clear @s poisonous_potato[custom_data={dried_rotten_flesh:true}] 16
                        }
                        execute if score @s Nightrunner_CauldronCraftableAmountInHand matches ..15 run block{
                            tellraw @s [{"text":"You need at least 16 dried rotten flesh to craft with the cauldron.","color":"red"}]
                            tag @s add ErrorShowed
                        }
                    }

                    # Check if craft can continue
                    execute at @s run execute unless entity @a[distance=..8,limit=1,tag=AmountExceeded] run return run block{
                        execute as @s run tellraw @s [{"text":"This item is not a valid recipe for the cauldron.","color":"red"}]
                    }

                    # Set item display to show rotten flesh
                    data merge entity @e[type=item_display,limit=1,sort=nearest,tag=forge_core] {CustomNameVisible:0b,start_interpolation:0,interpolation_duration:100,transformation:{left_rotation:[0f,0f,0f,1f],right_rotation:[0f,0f,0f,1f],translation:[0f,-1f,0f],scale:[0.8f,0.8f,0.8f]},item:{id:"minecraft:poisonous_potato",count:1,components:{"minecraft:custom_model_data":1121}}}
                    execute as @s run scoreboard players set @s Nightrunner_CauldronCraftingTimer 100
                }

                # Clear the player who clicked from item display
                execute as @s run data remove entity @s interaction

                # remove tag
                tag @s remove interaction
            }

            execute as @s[tag=!AmountExceeded] run execute as @s[tag=!ErrorShowed] run tellraw @s [{"text":"This item is not a valid recipe for the cauldron.","color":"red"}]

            tag @s remove ErrorShowed
            tag @s remove interaction_player
            tag @s remove AmountExceeded
        }
        function left_clicked{
            # Reset advancement
            advancement revoke @s only nightrunner:interacted_with_cauldron_left

            # execute at @s as @n[type=minecraft:interaction,predicate={name of your predicate}] run tag @s add interaction
            execute at @s as @n[type=minecraft:interaction,predicate=nightrunner:interaction_left_clicked] run tag @s add interaction

            # Check wich interaction was clicked
            execute as @e[tag=interaction] run block left_clicked/handle_interaction{
                # Clear the player who clicked from item display
                execute as @s run data remove entity @s attack

                # Summon the original item
                execute as @s run function *items/forge_core/summon

                # kill the item display
                execute at @s run kill @e[type=item_display,nbt={Tags:["forge_core"]},sort=nearest,limit=1]
                # kill the interactable
                kill @s
            }
        }
        function finish_craft{
            # Check if lava cauldron still exists
            execute as @s at @s run execute unless block ~ ~-1 ~ lava_cauldron run block{
                # Cancel the craft if the cauldron is missing
                execute as @s run function *items/forge_core/summon
            }
            execute as @s at @s run execute if block ~ ~-1 ~ lava_cauldron run block{
                # Convert to empty cauldron
                execute as @s run setblock ~ ~-1 ~ minecraft:cauldron
                # Summon the soulstone
                execute at @s run function *items/soulstone/summon
            }

            # Kill item display
            execute at @s run kill @e[type=item_display,limit=1,sort=nearest,tag=forge_core]
            # Kill interactable
            kill @s
        }
        function destroy_cauldron_crafts{
            # Kill item frames (Item placer)
            kill @e[type=item_frame,nbt={Tags:["forge_core"]}]
            # Kill item displays (Brewing Stand)
            kill @e[type=item_display,nbt={Tags:["forge_core"]}]
            # Kill interactables (Brewing Stand)
            kill @e[type=interaction,nbt={Tags:["CauldronCraftInteractable"]}]
        }
    }
    dir enchanting_table_craft{
        function give{
            give @p item_frame[entity_data={id:"minecraft:item_frame",Item:{id:"minecraft:music_disc_mall"},Tags:["spellbinder"]},custom_model_data=1124,item_name='{"text":"Spellbinder","italic":false}',lore=['{"text":"Place on top of a lectern"}','{"text":"Nightrunner","color":"aqua"}']] 1
        }
        function load minecraft:load{
            scoreboard objectives add Nightrunner_enchanting_tableUpgradePlaced minecraft.used:minecraft.item_frame
        }
        function enchanting_table_check minecraft:tick{
            # Check if the player placed a lectern
            execute as @a[scores={Nightrunner_enchanting_tableUpgradePlaced=1..}] run block enchanting_table_check2{
                scoreboard players reset @s Nightrunner_enchanting_tableUpgradePlaced
                say placed
                execute as @e[type=item_frame,nbt={Tags:["spellbinder"],Item:{}}] run block{
                    # Check if its on top of a lectern
                    execute at @s run execute if block ~ ~-0.5 ~ minecraft:enchanting_table run return run block{
                        # Summon interaction
                        summon interaction ~ ~-0.5 ~ {width:0.75,height:0.75,response:0.75,Tags:["EnchantingTableCraftInteractable"]}
                        # Summon block display to show its existence
                        summon block_display ~-0.5 ~-1.25 ~-0.5 {Passengers:[{id:"minecraft:block_display",block_state:{Name:"minecraft:respawn_anchor",Properties:{charges:"0"}},transformation:[0.8750f,0.0000f,0.0000f,0.0625f,0.0000f,0.8750f,0.0000f,0.1250f,0.0000f,0.0000f,0.8750f,0.0625f,0.0000f,0.0000f,0.0000f,1.0000f],Tags:["EnchantingTableCraftInteractable"]}]}

                        say Correct

                        # Kill the item frame
                        kill @s
                    }
                    kill @s
                }
            }
        }
        <%%
            let advancementArray = [];
            let advancement_name = "enchanting_table";
            let advancement_tag = "EnchantingTableCraftInteractable";

            advancementArray.push(`advancement interacted_with_${advancement_name}_right{\n`);
            advancementArray.push(`"criteria": {\n`);
            advancementArray.push(`"requirement": {\n`);
            advancementArray.push(`"trigger": "minecraft:player_interacted_with_entity",\n`);
            advancementArray.push(`"conditions": {\n`);
            advancementArray.push(`"entity": {\n`);
            advancementArray.push(`"type": "minecraft:interaction",\n`);
            advancementArray.push(`"nbt": "{Tags:[\\"${advancement_tag}\\"]}"\n`);
            advancementArray.push(`}\n`); // Close "entity"
            advancementArray.push(`}\n`); // Close "conditions"
            advancementArray.push(`}\n`); // Close "requirement"
            advancementArray.push(`},\n`); // Close "criteria"
            advancementArray.push(`"rewards": {\n`);
            advancementArray.push(`"function": "nightrunner:crafting/enchanting_table_craft/right_clicked"\n`);
            advancementArray.push(`}\n`); // Close "rewards"
            advancementArray.push(`}\n`); // Close "advancement"

            emit.mcb(advancementArray.join(''));
        %%>
    }
}
#=================================================
# MARK: Items
#=================================================
dir items{
    function load minecraft:load{
        # Magic tool usage
        scoreboard objectives add Nightrunner_Used_Magic_tool minecraft.used:minecraft.warped_fungus_on_a_stick

        scoreboard objectives add Nightrunner_Mana dummy
        scoreboard objectives add Nightrunner_ManaMax dummy
        scoreboard objectives add Nightrunner_ManaMaxBase dummy
        scoreboard objectives add Nightrunner_ManaXP xp
        scoreboard objectives add Nightrunner_ManaTemp dummy

        scoreboard objectives add Nightrunner_EffectCooldown dummy
        scoreboard objectives add Nightrunner_Item_Ray_steps dummy
        scoreboard objectives add Nightrunner_Item_Ray_Return dummy
        scoreboard objectives add Nightrunner_RangedSpellRange dummy
        scoreboard objectives add Nightrunner_RangedSpellRangeDefault dummy
        scoreboard objectives add Nightrunner_SpellCooldown dummy
        scoreboard objectives add Nightrunner_Weak_Use dummy
    }
    # MARK: Magic (inside items)
    function magic_tick minecraft:tick{
        # check if player has xp mana
        execute as @a[scores={Nightrunner_ManaXP=1..}] run block{
            # reset mana xp
            scoreboard players operation @s Nightrunner_ManaTemp += @s Nightrunner_ManaXP
            # if we got mana/xp then give retaliation points to nearby players (if we stole someones mana)
            scoreboard players set #2 Nightrunner_ManaTemp 2
            scoreboard players operation .retaliation Nightrunner_ManaTemp = @s Nightrunner_ManaXP
            scoreboard players operation .retaliation Nightrunner_ManaTemp /= #2 Nightrunner_ManaTemp
            execute as @s at @s run execute as @a[distance=..35,scores={Nightrunner_MagicSkillLevel=20..}] run block{
                scoreboard players operation @s Nightrunner_ManaTemp += .retaliation Nightrunner_ManaTemp
            }

            scoreboard players reset @s Nightrunner_ManaXP

        }
        execute as @a run execute if score @s Nightrunner_ManaTemp matches 250.. run block{
            scoreboard players remove @s Nightrunner_ManaTemp 250
            scoreboard players add @s Nightrunner_Mana 1
            # clamp mana
            execute if score @s Nightrunner_Mana > @s Nightrunner_ManaMax run scoreboard players operation @s Nightrunner_Mana = @s Nightrunner_ManaMax
        }
    }
    # TODO: move this
    function add_mana{
        # Add mana macro
        $execute as @s run scoreboard players add @s Nightrunner_Mana $(amount)
        # clamp mana
        execute if score @s Nightrunner_Mana > @s Nightrunner_ManaMax run scoreboard players operation @s Nightrunner_Mana = @s Nightrunner_ManaMax
    }
    recipe mana_efficiency{
        "type": "minecraft:crafting_shapeless",
        "category": "misc",
        "ingredients": [
            {
            "item": "minecraft:emerald"
            },
            {
            "item": "minecraft:book"
            },
            {
            "item": "minecraft:golden_apple"
            }
        ],
        "result": {
            "id": "minecraft:enchanted_book",
            "components": {
            "minecraft:enchantments": {
                "nightrunner:mana_efficiency": 1
            }
            }
        }
        }
    dir forge_core{
        # Forge Core: A fundamental component essential for all cauldron crafting recipes
        # Uses music disc mall as a base
        # Used in cauldon crafting recipes as base component
        function give{
            give @p item_frame[entity_data={id:"minecraft:item_frame",Item:{id:"minecraft:music_disc_mall"},Tags:["forge_core"]},custom_model_data=1124,item_name='{"text":"Forge Core","italic":false}',lore=['{"text":"A fundamental component essential for all cauldron crafting recipes."}','{"text":"Nightrunner","color":"aqua"}']] 1
        }
        function summon{
            summon item ~ ~ ~ {Item:{id:"minecraft:item_frame",count:1,components:{"minecraft:entity_data":{id:"minecraft:item_frame",Item:{id:"minecraft:music_disc_mall"},Tags:["forge_core"]},"minecraft:custom_model_data":1124,"minecraft:item_name":'{"text":"Forge Core","italic":false}',"minecraft:lore":['"A fundamental component essential for all cauldron crafting recipes."','{"color":"aqua","text":"Nightrunner"}']}}}
        }
        recipe forge_core{
            "type": "minecraft:crafting_shaped",
            "pattern": [
                " i ",
                " i ",
                "iSi"
            ],
            "key": {
                "i": {
                    "item": "minecraft:iron_ingot"
                },
                "S": {
                    "item": "minecraft:stone"
                }
            },
            "result": {
                "id": "minecraft:item_frame",
                "count": 1,
                "components":{
                    "item_name":"[{\"text\":\"Forge Core\",\"italic\":false}]",
                    "lore": ["{\"text\":\"A fundamental component essential for all cauldron crafting recipes.\"}","{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                    "custom_model_data": 1124,
                    "entity_data": {
                        "id": "minecraft:item_frame",
                        "Item": {
                            "id": "minecraft:music_disc_mall"
                        },
                        "Tags": ["forge_core"]
                    }
                }
            }
        }
    }
    dir soulstone{
        # Soulstone: artifact capable of reviving a fallen player from their grave, bringing them back to the realm of the living
        # Uses music disc 11 as a base
        # Used to revive from grave
        function give{
            give @p minecraft:music_disc_11[custom_data={soulstone:true},item_name='{"text":"Soulstone","italic":false}',lore=['{"text":"Artifact capable of reviving a fallen player from their grave, bringing them back to the realm of the living."}','{"text":"Nightrunner","color":"aqua"}'],custom_model_data=1125,!minecraft:jukebox_playable] 1
        }
        function summon{
            summon item ~ ~ ~ {Item:{id:"minecraft:music_disc_11",count:1,components:{"!minecraft:jukebox_playable":{},"minecraft:item_name":'"Soulstone"',"minecraft:lore":['"Artifact capable of reviving a fallen player from their grave, bringing them back to the realm of the living."','{"color":"aqua","text":"Nightrunner"}'],"minecraft:custom_model_data":1125,"minecraft:custom_data":{soulstone:true}}}}
        }
    }
    dir dried_rotten_flesh{
        # Dried Rotten Flesh: (4 nutrition, 0.8 saturation, 1.5 eat seconds)
        # Uses rotten flesh as a base.
        function give_dried_rotten_flesh{
            give @s minecraft:poisonous_potato[food={nutrition:4,saturation:0.8,can_always_eat:false,eat_seconds:1.5},item_name='{"text":"Dried Rotten Flesh","italic":false}',lore=['{"text":"Nightrunner","color":"aqua"}'],custom_model_data=1121,custom_data={dried_rotten_flesh:true}] 1
        }
        # Smelting rotten flesh to dried rotten flesh
        recipe smelt_rotten_flesh{
            "type": "minecraft:smelting",
            "ingredient": {
                "item": "minecraft:rotten_flesh"
            },
            "result": {
                "id": "minecraft:poisonous_potato",
                "components":{
                    "item_name":"[{\"text\":\"Dried Rotten Flesh\",\"italic\":false}]",
                    "lore": ["{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                    "food": {
                        "nutrition": 4,
                        "saturation": 0.8,
                        "can_always_eat": false,
                        "eat_seconds": 1.5
                    },
                    "custom_model_data": 1121,
                    "custom_data": {
                        "dried_rotten_flesh": true
                    }
                }
            },
            "experience": 0.05,
            "cookingtime": 100
        }
    }
    # MARK: Consumables
    dir consumables{
        dir heartfruit{
            # Heartfruit: A common consumable that grants a temporary heart, up to a maximum of two.
            # Uses poisonous_potato as a base.
            function give{
                give @s minecraft:poisonous_potato[custom_data={heartfruit:true},food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:1},item_name='{"text":"Heartfruit","italic":false}',lore=['{"text":"A common consumable that grants a temporary heart, up to a maximum of two."}','{"text":"Nightrunner","color":"aqua"}'],custom_model_data=1122] 1
            }
            function apply{
                # reset advancement
                advancement revoke @s only nightrunner:used_heartfruit
                # Apply temporary health
                add_temp_health 2 4
            }
            recipe heartfruit{
                "type": "minecraft:crafting_shaped",
                "pattern": [
                    " i ",
                    "iSi",
                    " i "
                ],
                "key": {
                    "i": {
                        "item": "minecraft:copper_ingot"
                    },
                    "S": {
                        "item": "minecraft:potato"
                    }
                },
                "result": {
                    "id": "minecraft:poisonous_potato",
                    "count": 1,
                    "components":{
                        "item_name":"[{\"text\":\"Heartfruit\",\"italic\":false}]",
                        "lore": ["{\"text\":\"A common consumable that grants a temporary heart, up to a maximum of two.\"}","{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                        "food": {
                            "nutrition": 0,
                            "saturation": 0,
                            "can_always_eat": true,
                            "eat_seconds": 1
                        },
                        "custom_model_data": 1122,
                        "custom_data": {
                            "heartfruit": true
                        }
                    }
                }
            }
        }
        dir heartfruit_plus{
            # Heartfruit Plus: A rarer variant that grants a temporary heart, up to a maximum of three.
            # Uses poisonous_potato as a base.
            function give{
                give @s minecraft:poisonous_potato[custom_data={heartfruit_plus:true},food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:1},item_name='{"text":"Heartfruit Plus","italic":false}',lore=['{"text":"A rarer variant that grants a temporary heart and a half, up to a maximum of three."}','{"text":"Nightrunner","color":"aqua"}'],enchantment_glint_override=true,rarity=rare,custom_model_data=1123] 1
            }
            function apply{
                # reset advancement
                advancement revoke @s only nightrunner:used_heartfruit_plus
                # Apply temporary health
                add_temp_health 3 6
            }
            recipe heartfruit_plus{
                "type": "minecraft:crafting_shaped",
                "pattern": [
                    " x ",
                    "iSi",
                    " i "
                ],
                "key": {
                    "i": {
                        "item": "minecraft:copper_ingot"
                    },
                    "S": {
                        "item": "minecraft:potato"
                    },
                    "x": {
                        "item": "minecraft:gold_nugget"
                    }
                },
                "result": {
                    "id": "minecraft:poisonous_potato",
                    "count": 1,
                    "components":{
                        "item_name":"[{\"text\":\"Heartfruit Plus\",\"italic\":false}]",
                        "lore": ["{\"text\":\"A rarer variant that grants a temporary heart and a half, up to a maximum of three.\"}","{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                        "food": {
                            "nutrition": 0,
                            "saturation": 0,
                            "can_always_eat": true,
                            "eat_seconds": 1
                        },
                        "enchantment_glint_override": true,
                        "rarity": "rare",
                        "custom_model_data": 1123,
                        "custom_data": {
                            "heartfruit_plus": true
                        }
                    }
                }
            }
        }
        dir golden_apple{
            advancement used_golden_apple{
            "criteria": {
                "requirement": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "items": "minecraft:golden_apple"
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/golden_apple/apply"
            }
            }
            function apply{
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/golden_apple/used_golden_apple

                # Return if max health is more then 20
                execute if score @s Nightrunner_MaxHealth matches 20.. run return 1

                # Set the player health to 20
                set_max_health 20
            }
        }
        dir enchanted_golden_apple{
            advancement used_enchanted_golden_apple{
            "criteria": {
                "requirement": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "items": "minecraft:enchanted_golden_apple"
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/enchanted_golden_apple/apply"
            }
            }
            function apply{
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/enchanted_golden_apple/used_enchanted_golden_apple

                # Return if max health is more then 22
                execute if score @s Nightrunner_MaxHealth matches 22.. run return 1

                # Set the player health to 22
                set_max_health 22
            }
        }
        dir bottle_of_experience_30{
            # Bottle of experience: A consumable item that gives levels when consumed. (Level amount: 30) (1395 points)
            # Uses poisonus potato as a base.
            function give{
            give @s minecraft:poisonous_potato[custom_data={bottle_of_experience_30:true},item_name='{"text":"Bottle of experience III","italic":false}',lore=['{"text":"A consumable item that gives levels when consumed."}','{"text":"Level amount: 30","color":"green"}','{"text":"(1395 points)","color":"dark_green"}','{"text":"Nightrunner","color":"aqua"}'],food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:2},enchantment_glint_override=true,custom_model_data=1126,max_stack_size=16] 1
            }
            function apply{
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/bottle_of_experience_30/used
                # Apply experience
                xp add @s 1395 points
            }
            advancement used{
                "criteria": {
                "use_item": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "predicates": {
                        "minecraft:custom_data": {"bottle_of_experience_30":true}
                    }
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/bottle_of_experience_30/apply"
            }
            }
        }
        dir bottle_of_experience_20{
            # Bottle of experience: A consumable item that gives levels when consumed. (Level amount: 20) (551 points)
            # Uses poisonus potato as a base.
            function give{
            give @s minecraft:poisonous_potato[custom_data={bottle_of_experience_20:true},item_name='{"text":"Bottle of experience II","italic":false}',lore=['{"text":"A consumable item that gives levels when consumed."}','{"text":"Level amount: 20","color":"green"}','{"text":"(551 points)","color":"dark_green"}','{"text":"Nightrunner","color":"aqua"}'],food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:2},enchantment_glint_override=true,custom_model_data=1126,max_stack_size=16] 1
            }
            function apply{
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/bottle_of_experience_20/used
                # Apply experience
                xp add @s 551 points
            }
            advancement used{
                "criteria": {
                "use_item": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "predicates": {
                        "minecraft:custom_data": {"bottle_of_experience_20":true}
                    }
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/bottle_of_experience_20/apply"
            }
            }
        }
        dir bottle_of_experience_10{
            # Bottle of experience: A consumable item that gives levels when consumed. (Level amount: 10) (160 points)
            # Uses poisonus potato as a base.
            function give{
            give @s minecraft:poisonous_potato[custom_data={bottle_of_experience_10:true},item_name='{"text":"Bottle of experience I","italic":false}',lore=['{"text":"A consumable item that gives levels when consumed."}','{"text":"Level amount: 10","color":"green"}','{"text":"(160 points)","color":"dark_green"}','{"text":"Nightrunner","color":"aqua"}'],food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:2},enchantment_glint_override=true,custom_model_data=1126,max_stack_size=16] 1
            }
            function apply{
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/bottle_of_experience_10/used
                # Apply experience
                xp add @s 160 points
            }
            advancement used{
                "criteria": {
                "use_item": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "predicates": {
                        "minecraft:custom_data": {"bottle_of_experience_10":true}
                    }
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/bottle_of_experience_10/apply"
            }
            }
        }
        function show_mana_state{
            # Show mana state
            title @s actionbar ["",{"text":"====| ","color":"gold"},{"text":"Mana: ","color":"green"},{"score":{"name":"@s","objective":"Nightrunner_Mana"}},{"text":" | ","color":"gold"},{"text":"Cooldown: ","color":"aqua"},{"score":{"name":"@s","objective":"Nightrunner_SpellCooldown"}},{"text":" |====","color":"gold"}]
        }
        dir mana_potion{
            function give{
            give @s minecraft:poisonous_potato[custom_data={mana_potion:true},item_name='{"text":"Mana Potion I","italic":false}',lore=['{"text":"A consumable item that gives mana when consumed."}','{"text":"Mana amount: 3","color":"green"}','{"text":"Nightrunner","color":"aqua"}'],food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:4},enchantment_glint_override=false,custom_model_data=1128,max_stack_size=6,enchantments={levels:{"nightrunner:mana_state":1},show_in_tooltip:false}] 1
            }
            function apply{
                scoreboard players add @s Nightrunner_Mana 3
                # Clamp mana
                execute if score @s Nightrunner_Mana > @s Nightrunner_ManaMax run scoreboard players operation @s Nightrunner_Mana = @s Nightrunner_ManaMax
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/mana_potion/used
            }
            advancement used{
                "criteria": {
                "use_item": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "predicates": {
                        "minecraft:custom_data": {"mana_potion":true}
                    }
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/mana_potion/apply"
            }
            }
            recipe mana_potion{
                "type": "minecraft:crafting_shaped",
                "pattern": [
                    " z ",
                    "ixi",
                    " s "
                ],
                "key": {
                    "i": {
                        "item": "minecraft:copper_ingot"
                    },
                    "x": {
                        "item": "minecraft:glass_bottle"
                    },
                    "z": {
                        "item": "minecraft:gold_ingot"
                    },
                    "s": {
                        "item": "minecraft:rotten_flesh"
                    }
                },
                "result": {
                    "id": "minecraft:poisonous_potato",
                    "count": 1,
                    "components": {
                    "item_name":"[{\"text\":\"Mana Potion I\",\"italic\":false}]",
                    "minecraft:lore": [
                        "{\"text\":\"A consumable item that gives mana when consumed.\"}",
                        "{\"text\":\"Mana amount: 3\",\"color\":\"green\"}",
                        "{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"
                    ],
                    "minecraft:food": {
                        "nutrition": 0,
                        "saturation": 0,
                        "can_always_eat": true,
                        "eat_seconds": 4
                    },
                    "minecraft:enchantment_glint_override": false,
                    "minecraft:custom_model_data": 1128,
                    "minecraft:max_stack_size": 6,
                    "minecraft:custom_data": {
                        "mana_potion": true
                    }
                    }
                }
            }
        }
        dir mana_potion_2{
            function give{
            give @s minecraft:poisonous_potato[custom_data={mana_potion_2:true},item_name='{"text":"Mana Potion II","italic":false}',lore=['{"text":"A consumable item that gives mana when consumed."}','{"text":"Mana amount: 6","color":"green"}','{"text":"Nightrunner","color":"aqua"}'],food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:4},enchantment_glint_override=false,custom_model_data=1128,max_stack_size=6] 1
            }
            function apply{
                scoreboard players add @s Nightrunner_Mana 6
                # Clamp mana
                execute if score @s Nightrunner_Mana > @s Nightrunner_ManaMax run scoreboard players operation @s Nightrunner_Mana = @s Nightrunner_ManaMax
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/mana_potion_2/used
            }
            advancement used{
                "criteria": {
                "use_item": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "predicates": {
                        "minecraft:custom_data": {"mana_potion_2":true}
                    }
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/mana_potion_2/apply"
            }
            }
        }
        dir mana_potion_3{
            function give{
            give @s minecraft:poisonous_potato[custom_data={mana_potion_3:true},item_name='{"text":"Mana Potion III","italic":false}',lore=['{"text":"A consumable item that gives mana when consumed."}','{"text":"Mana amount: 15","color":"green"}','{"text":"Nightrunner","color":"aqua"}'],food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:4},enchantment_glint_override=true,rarity="rare",custom_model_data=1128,max_stack_size=6] 1
            }
            function apply{
                scoreboard players add @s Nightrunner_Mana 15
                # Clamp mana
                execute if score @s Nightrunner_Mana > @s Nightrunner_ManaMax run scoreboard players operation @s Nightrunner_Mana = @s Nightrunner_ManaMax
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/mana_potion_3/used
            }
            advancement used{
                "criteria": {
                "use_item": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "predicates": {
                        "minecraft:custom_data": {"mana_potion_3":true}
                    }
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/mana_potion_3/apply"
            }
            }
        }
        dir mana_potion_4{
            function give{
            give @s minecraft:poisonous_potato[custom_data={mana_potion_4:true},item_name='{"text":"Mana Potion IV","italic":false}',lore=['{"text":"A consumable item that gives mana when consumed."}','{"text":"Mana amount: 35","color":"green"}','{"text":"Nightrunner","color":"aqua"}'],food={nutrition:0,saturation:0,can_always_eat:true,eat_seconds:4},enchantment_glint_override=true,rarity="epic",custom_model_data=1128,max_stack_size=6] 1
            }
            function apply{
                scoreboard players add @s Nightrunner_Mana 35
                # Clamp mana
                execute if score @s Nightrunner_Mana > @s Nightrunner_ManaMax run scoreboard players operation @s Nightrunner_Mana = @s Nightrunner_ManaMax
                # reset advancement
                advancement revoke @s only nightrunner:items/consumables/mana_potion_4/used
            }
            advancement used{
                "criteria": {
                "use_item": {
                "trigger": "minecraft:consume_item",
                "conditions": {
                    "item": {
                    "predicates": {
                        "minecraft:custom_data": {"mana_potion_4":true}
                    }
                    }
                }
                }
            },
            "rewards": {
                "function": "nightrunner:items/consumables/mana_potion_4/apply"
            }
            }
        }
    }
    # MARK: Armor
    dir armor{
        dir wizard_armor{
            dir wizard_helmet{
                recipe wizard_helmet{
                    "type": "minecraft:crafting_shapeless",
                    "ingredients": [
                        {
                        "item": "minecraft:book"
                        },
                        {
                        "item": "minecraft:leather_helmet"
                        },
                        {
                        "item": "minecraft:leather"
                        },
                        {
                        "item": "minecraft:emerald"
                        }
                    ],
                    "result": {
                        "id": "minecraft:leather_helmet",
                        "count": 1,
                        "components":{
                            "item_name":"[{\"text\":\"Wizard Helmet\",\"italic\":false}]",
                            "lore": ["{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                            "minecraft:custom_data": {
                                "wizard_helmet": true
                            },
                            "attribute_modifiers": [
                                {
                                    "id": "123e4567-e89b-12d3-a456-426614174001",
                                    "type": "generic.max_health",
                                    "amount": 1,
                                    "operation": "add_value",
                                    "slot": "head"
                                }
                            ]
                        }
                    }
                }
            }
            dir wizard_chestplate{
                recipe wizard_chestplate{
                    "type": "minecraft:crafting_shapeless",
                    "ingredients": [
                        {
                        "item": "minecraft:book"
                        },
                        {
                        "item": "minecraft:leather_chestplate"
                        },
                        {
                        "item": "minecraft:leather"
                        },
                        {
                        "item": "minecraft:emerald"
                        }
                    ],
                    "result": {
                        "id": "minecraft:leather_chestplate",
                        "count": 1,
                        "components":{
                            "item_name":"[{\"text\":\"Wizard Chestplate\",\"italic\":false}]",
                            "lore": ["{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                            "minecraft:custom_data": {
                                "wizard_chestplate": true
                            },
                            "attribute_modifiers": [
                                {
                                    "id": "123e4567-e89b-12d3-a456-426614174002",
                                    "type": "generic.max_health",
                                    "amount": 6,
                                    "operation": "add_value",
                                    "slot": "chest"
                                }
                            ]
                        }
                    }
                }
            }
            dir wizard_leggings{
                recipe wizard_leggings{
                    "type": "minecraft:crafting_shapeless",
                    "ingredients": [
                        {
                        "item": "minecraft:book"
                        },
                        {
                        "item": "minecraft:leather_leggings"
                        },
                        {
                        "item": "minecraft:leather"
                        },
                        {
                        "item": "minecraft:emerald"
                        }
                    ],
                    "result": {
                        "id": "minecraft:leather_leggings",
                        "count": 1,
                        "components":{
                            "item_name":"[{\"text\":\"Wizard Leggings\",\"italic\":false}]",
                            "lore": ["{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                            "minecraft:custom_data": {
                                "wizard_leggings": true
                            },
                            "attribute_modifiers": [
                                {
                                    "id": "123e4567-e89b-12d3-a456-426614174003",
                                    "type": "generic.max_health",
                                    "amount": 2,
                                    "operation": "add_value",
                                    "slot": "legs"
                                }
                            ]
                        }
                    }
                }
            }
            dir wizard_boots{
                recipe wizard_boots{
                    "type": "minecraft:crafting_shapeless",
                    "ingredients": [
                        {
                        "item": "minecraft:book"
                        },
                        {
                        "item": "minecraft:leather_boots"
                        },
                        {
                        "item": "minecraft:leather"
                        },
                        {
                        "item": "minecraft:emerald"
                        }
                    ],
                    "result": {
                        "id": "minecraft:leather_boots",
                        "count": 1,
                        "components":{
                            "item_name":"[{\"text\":\"Wizard Boots\",\"italic\":false}]",
                            "lore": ["{\"text\":\"Nightrunner\",\"color\":\"aqua\"}"],
                            "minecraft:custom_data": {
                                "wizard_boots": true
                            },
                            "attribute_modifiers": [
                                {
                                    "id": "123e4567-e89b-12d3-a456-426614174004",
                                    "type": "generic.max_health",
                                    "amount": 1,
                                    "operation": "add_value",
                                    "slot": "feet"
                                }
                            ]
                        }
                    }
                }
            }
            # diamond helmet to leather helmet 4 health
            # diamond chestplate to leather chestplate 10 health
            # diamond leggings to leather leggings 8 health
            # diamond boots to leather boots 4 health
        }
    }
    # MARK: Tools
    dir tools{
        function on_join nightrunner:on_join{
            scoreboard players set @s Nightrunner_RangedSpellRange 50
            scoreboard players set @s Nightrunner_RangedSpellRangeDefault 35
            scoreboard players set @s Nightrunner_Mana 20
            scoreboard players set @s Nightrunner_ManaMax 20
            scoreboard players set @s Nightrunner_ManaMaxBase 20
        }
        clock spell_cooldown 0.1s{
            # Cool down the Nightrunner_SpellCooldown
            execute as @a[scores={Nightrunner_SpellCooldown=1..}] run scoreboard players remove @s Nightrunner_SpellCooldown 1
            # if the cooldown is 0 then play sound
            execute as @a[scores={Nightrunner_SpellCooldown=1}] at @s run playsound minecraft:item.book.put master @s ~ ~ ~ 1 1

            execute as @a[scores={Nightrunner_SentryCooldown=1..}] run scoreboard players remove @s Nightrunner_SentryCooldown 1
        }
        function tick minecraft:tick{
            # Check if the player used the default warp fungus on a stick and ignore it
            execute as @a if score @s Nightrunner_Used_Magic_tool matches 2.. run scoreboard players reset @s Nightrunner_Used_Magic_tool

            # show mana bar if wnat is in the player's main hand
            execute as @a[nbt={SelectedItem:{id:"minecraft:warped_fungus_on_a_stick",count:1,components:{"minecraft:custom_data":{wand:true}}}}] run function ./show_cooldown_bar
            # show mana bar if wnat is in the player's off hand
            execute as @a[nbt={Inventory:[{id:"minecraft:warped_fungus_on_a_stick",Slot:-106b,components:{"minecraft:custom_data":{wand:1b}}}]}] run function ./show_cooldown_bar

            # Check the distance
            # TODO: Optimise this
            # MARK: Check distance for wands
            execute as @a run block check_distance{
                execute as @s run scoreboard players operation @s Nightrunner_RangedSpellRange = @s Nightrunner_RangedSpellRangeDefault
                execute as @s if entity @s[nbt={Inventory:[{Slot:100b,id:"minecraft:leather_boots"}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 2
                execute as @s if entity @s[nbt={Inventory:[{Slot:101b,id:"minecraft:leather_leggings"}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 2
                execute as @s if entity @s[nbt={Inventory:[{Slot:102b,id:"minecraft:leather_chestplate"}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 2
                execute as @s if entity @s[nbt={Inventory:[{Slot:103b,id:"minecraft:leather_helmet"}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 2
                # Wizard armor @s[nbt={Inventory:[{id:"minecraft:leather_boots",Slot:100b,components:{"minecraft:custom_data":{wizard_boots:1b}}}]}]
                execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_boots",Slot:100b,components:{"minecraft:custom_data":{wizard_boots:1b}}}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 5
                execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_leggings",Slot:101b,components:{"minecraft:custom_data":{wizard_leggings:1b}}}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 5
                execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_chestplate",Slot:102b,components:{"minecraft:custom_data":{wizard_chestplate:1b}}}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 5
                execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_helmet",Slot:103b,components:{"minecraft:custom_data":{wizard_helmet:1b}}}]}] run scoreboard players add @s Nightrunner_RangedSpellRange 5
            }
        }
        function show_cooldown_bar{
            execute as @s[scores={Nightrunner_SpellCooldown=0}] run title @s actionbar [{"text":"✦ ","color":"gold","bold":true},{"text":"Mana: ","color":"green"},{"score":{"name":"@s","objective":"Nightrunner_Mana"},"color":"gold"},{"text":"/","color":"white"},{"score":{"name":"@s","objective":"Nightrunner_ManaMax"},"color":"gold"},{"text":" | ","color":"white"},{"text":"Distance: ","color":"light_purple"},{"score":{"name":"@s","objective":"Nightrunner_RangedSpellRange"},"color":"gold"},{"text":" ✦","color":"gold","bold":true}]
            execute as @s[scores={Nightrunner_SpellCooldown=1..}] run title @s actionbar [{"text":"✦ ","color":"gold","bold":true},{"text":"Mana: ","color":"green"},{"score":{"name":"@s","objective":"Nightrunner_Mana"}},{"text":" | ","color":"white"},{"text":"Cooldown: ","color":"aqua"},{"score":{"name":"@s","objective":"Nightrunner_SpellCooldown"}},{"text":" | ","color":"white"},{"text":"Distance: ","color":"light_purple"},{"score":{"name":"@s","objective":"Nightrunner_RangedSpellRange"},"color":"gold"},{"text":" ✦","color":"gold","bold":true}]
        }
        <%%
            // MARK: Compile all the wands
            for(let i = 0; i < WandsArray.length; i++){
                emit.mcb(WandsArray[i].compiledData);
            }
        %%>
    }
}
#=================================================
# MARK: Sentry
#=================================================
dir sentry{
    function load minecraft:load{
        scoreboard objectives add Nightrunner_SentryID minecraft.used:minecraft.warped_fungus_on_a_stick
        scoreboard objectives add Nightrunner_SentryLifetime dummy
        scoreboard objectives add Nightrunner_SentryCooldown dummy
    }
    clock check_sentry_lifetime 1s{
        execute as @e[type=block_display,tag=sentry] run block{
            scoreboard players remove @s Nightrunner_SentryLifetime 1
            execute if score @s Nightrunner_SentryLifetime matches ..0 run block{
                execute at @s run playsound minecraft:block.beacon.deactivate master @a ~ ~ ~ 1 1.5
                execute at @s run particle minecraft:sonic_boom ~ ~ ~ ~ ~ ~ 1 0 force
                kill @s
            }
        }
    }
}
#=================================================
# MARK: Health system
#=================================================
#  Key points:
#  - No respawns (Player is dead until revived)
#  - Revive system
#  - Start with 16 health (8 hearts)
dir health_system{
    function load minecraft:load{
        #=================================================
        # Scoreboards
        #=================================================
        # Use Health system
        scoreboard objectives add Nightrunner_UseHealthSystem dummy
        # Use Revive system
        scoreboard objectives add Nightrunner_UseReviveSystem dummy
        # Total Death count
        scoreboard objectives add Nightrunner_DeathCount deathCount
        # This is used to check if player died (And gets reset every time the player dies)
        scoreboard objectives add Nightrunner_Death deathCount
        # Is player dead
        scoreboard objectives add Nightrunner_CurrentlyDead dummy
        # Op Revive me trigger
        scoreboard objectives add Nightrunner_Revive trigger
        # Op Revive all trigger
        scoreboard objectives add Nightrunner_ReviveAll trigger
        # Health
        scoreboard objectives add Nightrunner_Health health
        # Health max
        scoreboard objectives add Nightrunner_MaxHealth dummy
        # Current absorption amount
        scoreboard objectives add Nightrunner_Absorption dummy
        # Check | Current Absorption Amount
        scoreboard objectives add Nightrunner_CheckCurrentAbsorptionAmount dummy
        # Grave id
        scoreboard objectives add Nightrunner_GraveID dummy
        # Attempt revive
        scoreboard objectives add Nightrunner_AttemptRevive dummy


        #=================================================
        # Load the health system
        #=================================================
        # Set immediate respawn gamerule
        gamerule doImmediateRespawn false

        #=================================================
        # Check scoreboard settings
        #=================================================
        execute unless score $Nightrunner Nightrunner_UseReviveSystem matches ..99999 run scoreboard players set $Nightrunner Nightrunner_UseReviveSystem 1
        execute unless score $Nightrunner Nightrunner_UseHealthSystem matches ..99999 run scoreboard players set $Nightrunner Nightrunner_UseHealthSystem 1
    }
    clock setup 1s{
        # TODO: Dont use clock and use schedule instead
        # Check if the health system is enabled
        execute if score $Nightrunner Nightrunner_UseHealthSystem matches 0 run return 1
        # Set the player max health if score is null
        execute as @a unless score @s Nightrunner_Health matches 0.. run block setup_health{
            # Set the max health
            set_max_health 16
        }
    }
    function set_temporary_health{
        # Give the player lvl 100 absorption effect
        effect give @s minecraft:absorption 1 100 true
        # Set the players max absorption to the correct amount
        $attribute @s minecraft:generic.max_absorption base set $(amount)
        # Clear effect to remove the absorption effect and only keep the max absorption
        effect clear @s minecraft:absorption
    }
    function tick minecraft:tick{
        # TODO: Dont use tick and use schedule instead
        # Check if the revive system is enabled
        execute if score $Nightrunner Nightrunner_UseReviveSystem matches 0 run return 1
        # Check if the player is dead
        execute as @a[scores={Nightrunner_Death=1..},limit=1] run block death_screen{
            # execute the death function
            function ./death
            # Reset the dead status
            scoreboard players reset @s Nightrunner_Death
        }
    }
    function death{
        # if player is not in survival mode then return
        execute as @s[nbt={playerGameType:1}] run return run tellraw @s [{"text":"Auto revived while in creative","color":"blue"}]

        # Summon grave
        execute as @s run function ./summon_grave

        # Set player respawn location to the death location
        execute at @s run spawnpoint @s ~ ~ ~
        # Set the player as dead
        scoreboard players set @s Nightrunner_CurrentlyDead 1
        # Set player to spectator
        gamemode spectator @s
        # Show title with death message
        title @s title [{"text":"You died","color":"red"}]
    }
    function summon_grave{
        # Summon a grave block
        execute at @s run summon block_display ~ ~1 ~ {CustomNameVisible:1b,CustomName:'"Grave"',transformation:{left_rotation:[0f,0f,0f,1f],right_rotation:[0f,0f,0f,1f],translation:[-0.5f,-1.0f,-0.5f],scale:[1f,1f,1f]},block_state:{Name:"minecraft:stone_brick_wall",Properties:{east:"low",west:"low",up:"true"}},Tags:["Grave"]}
        # Summon interactable
        execute as @e[type=minecraft:block_display,sort=nearest,limit=1,nbt={Tags:["Grave"]}] at @s positioned ~ ~-1 ~ summon interaction run data merge entity @s {width:1,height:1,response:1,Tags:[GraveInteractable]}

        # Set the grave id to match the player id
        execute as @s run scoreboard players operation @e[type=block_display,nbt={Tags:["Grave"]},sort=nearest,limit=1] Nightrunner_GraveID = @s Nightrunner_ID
        # Set the interactable id to match the player id
        execute as @s run scoreboard players operation @e[type=interaction,nbt={Tags:["GraveInteractable"]},sort=nearest,limit=1] Nightrunner_GraveID = @s Nightrunner_ID
    }
    function interacted_with_grave{
        # Reset advancement
        advancement revoke @s only nightrunner:interacted_with_grave

        # add tag to interaction
        execute at @s as @n[type=minecraft:interaction,predicate=nightrunner:interaction_right_clicked] run tag @s add interaction
        # add tag
        tag @s add interaction_player

        # Check if the player who interacted is holding the soulstone
        execute as @a[limit=1,sort=nearest,nbt={SelectedItem:{id:"minecraft:music_disc_11",components:{"minecraft:custom_data":{soulstone:true}}}}] run block{
            tag @s add SoulstoneInHand
            scoreboard players set $Nightrunner Nightrunner_AttemptRevive 1
        }

        execute if score $Nightrunner Nightrunner_AttemptRevive matches 1 run block{
            # Check all player for correct id
            execute as @a run execute if score @e[tag=interaction,sort=nearest,limit=1] Nightrunner_GraveID = @s Nightrunner_ID run block{
                # if player is in spectator mode then teleport to grave and set to survival
                execute as @s[nbt={playerGameType:3}] run return run function ./revive
                # say @s Revived
            }
            execute as @a run say @s check
        }

        # Check wich interaction was clicked
        execute as @e[tag=interaction,limit=1] run block handle_interaction{
            # Clear the player who clicked from item display
            execute as @s run data remove entity @s interaction

            # tell the grave owner id
            execute as @s run tellraw @a[tag=interaction_player,sort=nearest,limit=1] [{"text":"Grave Owner ID: ","color":"green"},{"score":{"name":"@s","objective":"Nightrunner_GraveID"}}]

            scoreboard players operation $Nightrunner Nightrunner_GraveID = @s Nightrunner_GraveID

            # remove tag
            tag @s remove interaction
        }

        scoreboard players reset $Nightrunner Nightrunner_GraveID
        scoreboard players reset $Nightrunner Nightrunner_AttemptRevive

        tag @s remove SoulstoneInHand
        tag @s remove interaction_player
    }
    function kill_player_graves{
        # Kill graves
        $kill @e[type=block_display,nbt={Tags:["Grave"]},scores={Nightrunner_GraveID=$(id)}]
        # Kill interactables
        $kill @e[type=interaction,nbt={Tags:["GraveInteractable"]},scores={Nightrunner_GraveID=$(id)}]
    }
    function kill_all_graves{
        # Kill graves
        kill @e[type=block_display,nbt={Tags:["Grave"]}]
        # Kill interactables
        kill @e[type=interaction,nbt={Tags:["GraveInteractable"]}]
    }
    function teleport_to_grave{
        # Teleport to closest grave macro
        $execute as @s run tp @s @e[type=block_display,sort=nearest,limit=1,nbt={Tags:["Grave"]},scores={Nightrunner_GraveID=$(id)}]
    }
    function revive{
        # set the player as not dead
        scoreboard players reset @s Nightrunner_CurrentlyDead

        # Save the grave owner id (for macro functions)
        execute store result storage nightrunner:grave owner.id int 1 run scoreboard players get @s Nightrunner_ID

        # Teleport to closest grave macro
        function ./teleport_to_grave with storage nightrunner:grave owner

        # Set player to survival
        gamemode survival @s
        # Show title with revive message
        title @s title [{"text":"You have been revived","color":"green"}]

        # Kill graves macro
        function ./kill_player_graves with storage nightrunner:grave owner

        # TEMP: Set health to 16
        set_max_health 16
    }
    dir revive{
        function tick minecraft:tick{
            # Give op the ability to revive themselves and others
            execute as @a[scores={Nightrunner_Op=1}] run scoreboard players enable @s Nightrunner_Revive
            execute as @a[scores={Nightrunner_Op=1}] run scoreboard players enable @s Nightrunner_ReviveAll

            # Check if the player ran the revive command
            execute as @a[scores={Nightrunner_Revive=1}] run block trigger_revive{
                # Reset the revive status
                scoreboard players reset @s Nightrunner_Revive
                # execute the revive function
                function ./op_revive
            }
            # Check if the player ran the revive all command
            execute as @a[scores={Nightrunner_ReviveAll=1}] run block trigger_revive_all{
                # Reset the revive all status
                scoreboard players reset @s Nightrunner_ReviveAll
                # execute the revive all function
                function ./op_revive_all
            }
        }
        function op_revive{
            # set the player as not dead
            scoreboard players reset @s Nightrunner_CurrentlyDead
            # Set player to survival
            gamemode survival @s
            # Show title with revive message
            title @s title [{"text":"You have been revived","color":"green"}]
            # Kill graves
            execute store result storage nightrunner:grave owner.id int 1 run scoreboard players get @s Nightrunner_ID
            function ../kill_player_graves with storage nightrunner:grave owner
        }
        function op_revive_all{
            # Execute as dead players
            execute as @a[scores={Nightrunner_CurrentlyDead=1}] run function ./op_revive
        }
    }
}
#=================================================
# MARK: Home system
#=================================================
dir home{
    function load minecraft:load{
        scoreboard objectives add Nightrunner_HomeCheck minecraft.used:minecraft.bell
    }
    function tick minecraft:tick{
        # Check if the player used the bell
        execute as @a if score @s Nightrunner_HomeCheck matches 1.. run block check_home{
            # Reset the home check
            scoreboard players reset @s Nightrunner_HomeCheck
            execute as @s run execute at @s run block {
                execute unless entity @e[type=item,nbt={Item:{id:"minecraft:iron_block",count:1}},distance=..8,limit=1] run return 1
                kill @e[type=item,nbt={Item:{id:"minecraft:iron_block",count:1}},distance=..8,limit=1]
                # execute the home function
                function ./set_home
            }
        }
    }
    function set_home{
        function ./start_raycast
    }
    function setup{
        raycast 1
    }
    function hit_block{
        # TODO: Check the correct block
        execute align xyz positioned ~0.5 ~ ~0.5 run summon text_display ~ ~1 ~ {billboard:"center",Tags:["home"],text:'{"bold":true,"color":"green","text":"Home"}'}
    }
    function clear_homes{
        kill @e[type=text_display,tag=home]
    }
}
#=================================================
# MARK: testing
#=================================================
dir testing{
    function summon_home{
        summon cow ~ ~ ~ {Tags:["home"],CustomName:'{"text":"Home","color":"green"}',CustomNameVisible:1b,NoGravity:1b,NoAI:1b,Silent:1b}
    }
    function summon_custom_zombies{
        REPEAT (1,1) {
            summon zombie ~ ~ ~ {Tags:["hometest"]}
        }
    }
}
#=================================================
# MARK: Mobs
#=================================================
dir mobs{
    function load minecraft:load{
        scoreboard objectives add Nightrunner_CustomMobsEnabled dummy
        scoreboard objectives add Nightrunner_MobDefiner dummy
    }

    function tick minecraft:tick{
        # Check if the custom mobs are enabled
        execute if score $Nightrunner Nightrunner_CustomMobsEnabled matches 0 run return 1
        # call all mob functions
        function ./monsters/zombie
        function ./monsters/drowned
        function ./monsters/husk
        function ./monsters/zombie_villager
        function ./monsters/skeleton
        function ./monsters/stray
        function ./monsters/bogged
        function ./monsters/creeper
    }

    function mass_summon{
        REPEAT (1,30) {
            $summon $(type) ~ ~ ~
        }
    }
    #=================================================
    # Monsters
    dir monsters{
        <%%
            // MARK: Compile monster data
            const { CompiledMonsterData } = require('./javascripts/monsters');
            emit.mcb(CompiledMonsterData);
        %%>
        #=================================================
        # Zombie
        function zombie{
            execute if predicate nightrunner:10change run execute as @e[type=zombie,tag=!Nightrunner,limit=1] run data merge entity @s {CanBreakDoors:1b,Tags:["Nightrunner"],attributes:[{id:"minecraft:generic.attack_damage",base:10},{id:"minecraft:generic.movement_speed",base:0.31},{id:"minecraft:zombie.spawn_reinforcements",base:0.125}]}

            execute as @e[type=zombie,tag=!Nightrunner,limit=1] run data merge entity @s {CustomName:'"test"',CanBreakDoors:1b,Tags:["Nightrunner"],attributes:[{id:"minecraft:generic.attack_damage",base:10},{id:"minecraft:generic.movement_speed",base:0.31},{id:"minecraft:zombie.spawn_reinforcements",base:0.125}]}
            # Speedboy
            # execute if predicate nightmare:10change run data_speedboy zombie 5 0.55 Quickstep Zombie
            # Strongboy
            # execute if predicate nightmare:10change run data_normal_named zombie 12 0.23 Sturdy Zombie
            # Vanilla
            # data_damage_speed zombie 9 0.31
            # execute as @e[type=<%entity_type%>,tag=!Nightrunner,limit=1] run data merge entity @s {Attributes:[{Base:<%attack_damage%>,Name:"generic.attack_damage"},{Base:<%move_speed%>,Name:"generic.movement_speed"}], CanPickUpLoot:1b,Tags:["nightmare"], CustomName:'{"text":"<%entity_name%>"}',CustomNameVisible:0b}
        }
        function drowned{
            set_random_score drowned 1 100

            undead_base_values drowned Nightrunner_MobDefiner 100 20 10 0.31 1 1 HurtTime:0s

        }
        function husk{
            execute as @e[type=husk,tag=!Nightrunner,limit=1] run data merge entity @s {CanBreakDoors:1b,Tags:["Nightrunner"],attributes:[{id:"minecraft:generic.attack_damage",base:10},{id:"minecraft:generic.movement_speed",base:0.31},{id:"minecraft:zombie.spawn_reinforcements",base:0.125}]}


        }
        function zombie_villager{
            execute as @e[type=zombie_villager,tag=!Nightrunner,limit=1] run data merge entity @s {CanBreakDoors:1b,Tags:["Nightrunner"],attributes:[{id:"minecraft:generic.attack_damage",base:10},{id:"minecraft:generic.movement_speed",base:0.31},{id:"minecraft:zombie.spawn_reinforcements",base:0.125}]}


        }
        function skeleton{
            # execute as @e[type=husk,tag=!Nightrunner,limit=1] run data merge entity @s {CanBreakDoors:1b,Tags:["Nightrunner"],attributes:[{id:"minecraft:generic.attack_damage",base:10},,{id:"minecraft:generic.movement_speed",base:0.31},{id:"minecraft:zombie.spawn_reinforcements",base:0.125}]}
        }
        function stray{

            # Store a random value
            # execute store result score @s Nightrunner_MobDefiner run random value 1..100
            set_random_score stray 1 100

            undead_base_values stray Nightrunner_MobDefiner 100 20 10 0.31 1 1 HurtTime:0s

            # execute as @e[type=stray,tag=!Nightrunner,limit=1] run block data/stray{
                # Store a random value
                # execute store result score @s nightrunner.internal run random value 1..100
                # Set the skeleton data based on the random value
                # execute if score @s[tag=!Nightrunner] nightrunner.internal matches ..100 run data merge entity @s {CustomName:'"test"',Tags:["Nightrunner"],CanPickUpLoot:1b,attributes:[{id:"minecraft:generic.attack_damage",base:10},{id:"minecraft:generic.movement_speed",base:0.31}]}
            # }

        }
        function bogged{
            # execute store result score @s Nightrunner_MobDefiner run random value 1..100
            set_random_score bogged 1 100

            undead_base_values bogged Nightrunner_MobDefiner 100 20 10 0.31 1 1 HurtTime:0s

        }
        function creeper{
            execute as @e[type=creeper,tag=!Nightrunner,limit=1] run block data/creeper{
                # Store a random value
                execute store result score @s nightrunner.internal run random value 1..100
                # Set the skeleton data based on the random value
                execute if score @s[tag=!Nightrunner] nightrunner.internal matches ..5 run data merge entity @s {CustomName:'"Nuke"',Tags:["Nightrunner"],ExplosionRadius:15b,Fuse:45,attributes:[{id:"minecraft:generic.movement_speed",base:0.20},{id:"minecraft:generic.max_health", base:30},{id:"minecraft:generic.scale",base:1.25}]}

                execute if score @s[tag=!Nightrunner] nightrunner.internal matches ..15 run data merge entity @s {CustomName:'"Lite"',Tags:["Nightrunner"],ExplosionRadius:2b,Fuse:15,attributes:[{id:"minecraft:generic.movement_speed",base:0.3},{id:"minecraft:generic.max_health", base:10},{id:"minecraft:generic.scale",base:0.75}]}

                execute if score @s[tag=!Nightrunner] nightrunner.internal matches ..100 run data merge entity @s {CustomName:'"Normi"',Tags:["Nightrunner"],ExplosionRadius:5b,Fuse:30,attributes:[{id:"minecraft:generic.movement_speed",base:0.25},{id:"minecraft:generic.max_health", base:20},{id:"minecraft:generic.scale",base:1}]}

            }

            # Fuse | explosion | movement speed
            # Volatile (nuke)
            # execute if predicate nightmare:10change run data_normal_creeper 35 8 0.2 Volatile Creeper
            # Quickfuse (insta)
            # execute if predicate nightmare:10change run data_normal_creeper 15 4 2 Quickfuse Creeper
            # Creeping
            # execute if predicate nightmare:10change run data_normal_creeper 35 3 0.3 Creeping Creeper
            # Vanilla
            # data merge entity @e[type=creeper,tag=!nightmare,limit=1] {ExplosionRadius:5,Tags:["nightmare"]}
        }

    }
}
#=================================================
# MARK: Skill system
#=================================================
dir skills{
    function load minecraft:load{
        # Mining skill trackers
        scoreboard objectives add Nightrunner_MiningSkillPoints dummy
        scoreboard objectives add Nightrunner_MiningSkillPointsLastUpdate dummy
        scoreboard objectives add Nightrunner_MiningSkillLevel dummy
        scoreboard objectives add Nightrunner_MiningLevelModulus dummy
        # Magic skill trackers
        scoreboard objectives add Nightrunner_MagicSkillPoints dummy
        scoreboard objectives add Nightrunner_MagicSkillPointsLastUpdate dummy
        scoreboard objectives add Nightrunner_MagicSkillLevel dummy
        scoreboard objectives add Nightrunner_MagicLevelModulus dummy
    }
    function tick minecraft:tick{
        execute as @a run function ./mining_skill/check
    }
    function print_skills{
        execute as @a run block print_my_skills{
            # Mining Skill Level
            tellraw @s [{"text":"⚒ Mining Skill Level: ","color":"green","bold":true},{"score":{"name":"@s","objective":"Nightrunner_MiningSkillLevel"},"color":"yellow","bold":true}]

            # Mining Milestone Bonuses
            tellraw @s [{"text":"Mining Milestone Bonuses:","color":"gold"}]
            execute if score @s Nightrunner_MiningSkillLevel matches 50.. run tellraw @s [{"text":"- Reach distance increased by +0.25 blocks (Level 50)","color":"yellow"}]
            execute if score @s Nightrunner_MiningSkillLevel matches 100.. run tellraw @s [{"text":"- Temporary speed boost when mining ore (Level 100)","color":"yellow"}]
            execute if score @s Nightrunner_MiningSkillLevel matches 125.. run tellraw @s [{"text":"- 10% chance for temporary heart when mining ore (Level 125)","color":"yellow"}]
            execute if score @s Nightrunner_MiningSkillLevel matches 200.. run tellraw @s [{"text":"- Reach distance +0.25 blocks & enchant with grindstone (Level 200)","color":"yellow"}]

            # Magic Skill Level
            tellraw @s [{"text":"✨ Magic Skill Level: ","color":"light_purple","bold":true},{"score":{"name":"@s","objective":"Nightrunner_MagicSkillLevel"},"color":"yellow","bold":true}]

            # Magic Milestone Bonuses
            tellraw @s [{"text":"Magic Milestone Bonuses:","color":"gold"}]
            execute if score @s Nightrunner_MagicSkillLevel matches 20.. run tellraw @s [{"text":"- Receive half mana when nearby players pick it up (Level 20)","color":"yellow"}]

        }
    }
    dir mining_skill{
        <%%
            let compiledData = "";
            MineScores = [];
            MineScores.push("coal_ore");
            MineScores.push("iron_ore");
            MineScores.push("copper_ore");
            MineScores.push("gold_ore");
            MineScores.push("redstone_ore");
            MineScores.push("emerald_ore");
            MineScores.push("lapis_ore");
            MineScores.push("diamond_ore");
            MineScores.push("nether_gold_ore");
            MineScores.push("nether_quartz_ore");
            MineScores.push("deepslate_coal_ore");
            MineScores.push("deepslate_iron_ore");
            MineScores.push("deepslate_copper_ore");
            MineScores.push("deepslate_gold_ore");
            MineScores.push("deepslate_redstone_ore");
            MineScores.push("deepslate_emerald_ore");
            MineScores.push("deepslate_lapis_ore");
            MineScores.push("deepslate_diamond_ore");
            MineScores.push("ancient_debris");

            compiledData += `function load minecraft:load{\n`;
            for(let i = 0; i < MineScores.length; i++){ // Loop through all the mining scores
                compiledData += ``;
                compiledData += `scoreboard objectives add Nightrunner_MiningSkill_${MineScores[i]} minecraft.mined:minecraft.${MineScores[i]}\n`;
            }
            compiledData += `}\n`;

            compiledData += `function reset_scores{\n`;
            for(let i = 0; i < MineScores.length; i++){ // Loop through all the mining scores
                compiledData += ``;
                compiledData += `scoreboard players reset @s Nightrunner_MiningSkill_${MineScores[i]}\n`;
            }
            compiledData += `}\n`;

            compiledData += `function check{\n`;
            for(let i = 0; i < MineScores.length; i++){ // Loop through all the mining scores
                compiledData += ``;
                compiledData += `execute as @s run execute if score @s Nightrunner_MiningSkill_${MineScores[i]} matches 1.. run scoreboard players add @s Nightrunner_MiningSkillPoints 1\n`;
            }
            // Reset all the detection scores
            compiledData += `function ./reset_scores\n`;

            // If player dont have any points on last point update then set it to 0
            compiledData += `execute unless score @s Nightrunner_MiningSkillPointsLastUpdate matches 0.. run scoreboard players set @s Nightrunner_MiningSkillPointsLastUpdate 0\n`;

            // When player collected new points
            compiledData += `execute if score @s Nightrunner_MiningSkillPointsLastUpdate < @s Nightrunner_MiningSkillPoints run function ./collected_points\n`;

            // Points to levels
            compiledData += `execute if score @s[scores={Nightrunner_MiningSkillLevel=101..}] Nightrunner_MiningSkillPoints matches 100.. run function ./level_up\n`;
            compiledData += `execute if score @s Nightrunner_MiningSkillLevel matches 101.. run return 1\n`;
            compiledData += `execute if score @s[scores={Nightrunner_MiningSkillLevel=51..}] Nightrunner_MiningSkillPoints matches 20.. run function ./level_up\n`;
            compiledData += `execute if score @s Nightrunner_MiningSkillLevel matches 51.. run return 1\n`;
            compiledData += `execute if score @s[scores={Nightrunner_MiningSkillLevel=11..}] Nightrunner_MiningSkillPoints matches 10.. run function ./level_up\n`;
            compiledData += `execute if score @s Nightrunner_MiningSkillLevel matches 11.. run return 1\n`;
            compiledData += `execute if score @s Nightrunner_MiningSkillPoints matches 4.. run function ./level_up\n`;

            compiledData += `}\n`;

            emit.mcb(compiledData);

        %%>
        function collected_points{
            # Update the last update points
            scoreboard players operation @s Nightrunner_MiningSkillPointsLastUpdate = @s Nightrunner_MiningSkillPoints

            # If level is more then 100 then add small speed boost
            execute if score @s Nightrunner_MiningSkillLevel matches 100.. run block{
                effect give @s minecraft:speed 4 0 true
            }
            # If level is more then 125 then add small speed boost
            execute if score @s Nightrunner_MiningSkillLevel matches 125.. run execute if predicate nightrunner:10change run block{
                add_temp_health 2 2
            }
        }
        # MARK: Mining skill Level up
        function level_up{
            # add a level
            scoreboard players add @s Nightrunner_MiningSkillLevel 1
            # reset the points
            scoreboard players reset @s Nightrunner_MiningSkillPoints
            # reset the last update points
            scoreboard players set @s Nightrunner_MiningSkillPointsLastUpdate 0
            # play level up sound
            execute at @s run playsound minecraft:entity.player.levelup player @a ~ ~ ~ 0.5 0.8
            # update the player attributes
            execute as @s run function ./set_mining_skill_attributes
            # show level up message
            tellraw @s [{"text":"⚒ Mining Skill Leveled Up! ","color":"green","bold":true,"italic":true},{"text":"[Lvl ","color":"yellow"},{"score":{"name":"@s","objective":"Nightrunner_MiningSkillLevel"}},{"text":"]","color":"yellow"}]
            # broadcast the mining skill
            scoreboard players operation @s Nightrunner_MiningLevelModulus = @s Nightrunner_MiningSkillLevel
            scoreboard players set $Nightrunner Nightrunner_MiningLevelModulus 5
            scoreboard players operation @s Nightrunner_MiningLevelModulus %= $Nightrunner Nightrunner_MiningLevelModulus
            execute if score @s Nightrunner_MiningLevelModulus matches 0 run tag @s add broadcaster
            execute if score @s Nightrunner_MiningLevelModulus matches 0 run tellraw @a[tag=!broadcaster] [{"selector":"@s"},{"text":" has leveled up their Mining Skill! Now at ","color":"green"},{"text":"[Lvl ","color":"yellow"},{"score":{"name":"@s","objective":"Nightrunner_MiningSkillLevel"},"color":"yellow"},{"text":"]","color":"yellow"}]
            execute if score @s Nightrunner_MiningLevelModulus matches 0 run tag @s remove broadcaster

            # Milestone lvl 50
            execute if score @s Nightrunner_MiningSkillLevel matches 50 run block{
                title @s title {"text":"🎉 Milestone Achieved! 🎉","color":"gold"}
                title @s subtitle {"text":"+0.25 blocks reach distance!","color":"green"}
                title @s times 20 140 20
                tellraw @s [{"text":"🎉 Milestone Reached! 🎉","color":"gold","bold":true}]
                tellraw @s [{"text":"+0.25 block reach distance","color":"green"}]
            }
            # Update attributes if milestone is reached (If player gets the level or higher)
            execute if score @s Nightrunner_MiningSkillLevel matches 50.. run block{
                attribute @s minecraft:player.block_interaction_range modifier add n_mining_skill_milestone_50 0.25 add_value
            }
            # Update attributes if milestone is not reached (If player loses the level)
            execute if score @s Nightrunner_MiningSkillLevel matches ..49 run block{
                attribute @s minecraft:player.block_interaction_range modifier remove n_mining_skill_milestone_50
            }

            # Milestone lvl 100
            execute if score @s Nightrunner_MiningSkillLevel matches 100 run block{
                title @s title {"text":"🎉 Milestone Achieved! 🎉","color":"gold"}
                title @s subtitle {"text":"Temporary speed boost when mining ore!","color":"green"}
                title @s times 20 140 20
                tellraw @s [{"text":"🎉 Milestone Reached! 🎉","color":"gold","bold":true}]
                tellraw @s [{"text":"You now gain a temporary speed boost when mining ore!","color":"green"}]
            }

            # Milestone lvl 125
            execute if score @s Nightrunner_MiningSkillLevel matches 125 run block{
                title @s title {"text":"🎉 Milestone Achieved! 🎉","color":"gold"}
                title @s subtitle {"text":"10% chance to gain a temporary heart when mining ore!","color":"green"}
                title @s times 20 140 20
                tellraw @s [{"text":"🎉 Milestone Reached! 🎉","color":"gold","bold":true}]
                tellraw @s [{"text":"You now have a 10% chance to gain a temporary heart when mining ore!","color":"green"}]
            }

            # Milestone lvl 200
            execute if score @s Nightrunner_MiningSkillLevel matches 200 run block{
                title @s title {"text":"🎉 Milestone Reached! 🎉","color":"gold"}
                title @s subtitle {"text":"+0.25 blocks reach distance & enchant tools with grindstone!","color":"green"}
                title @s times 20 140 20
                tellraw @s [{"text":"🎉 Milestone Reached! 🎉","color":"gold","bold":true}]
                tellraw @s [{"text":"+0.25 block reach distance","color":"green"}]
                tellraw @s [{"text":"You can enchant tools using a grindstone!","color":"green"}]
            }
            # Update attributes if milestone is reached (If player gets the level or higher)
            execute if score @s Nightrunner_MiningSkillLevel matches 200.. run block{
                attribute @s minecraft:player.block_interaction_range modifier add n_mining_skill_milestone_200 0.25 add_value
            }
            # Update attributes if milestone is not reached (If player loses the level)
            execute if score @s Nightrunner_MiningSkillLevel matches ..199 run block{
                attribute @s minecraft:player.block_interaction_range modifier remove n_mining_skill_milestone_200
            }
        }
        function set_mining_skill_attributes{
            execute store result storage nightrunner:mining_skill attribute.amount float 0.2 run scoreboard players get @s Nightrunner_MiningSkillLevel
            execute as @s run function ./add_mining_attributes with storage nightrunner:mining_skill attribute
        }
        function add_mining_attributes{
            # Reset the mining attributes
            attribute @s minecraft:player.mining_efficiency modifier remove n_miningskill
            # Add the mining attributes
            $attribute @s minecraft:player.mining_efficiency modifier add n_miningskill $(amount) add_value
        }
    }
    dir magic_skill{
        function load minecraft:load{
            scoreboard objectives add Nightrunner_WizardArmorSetBonus dummy
        }
        function check minecraft:tick{
            # Check if the player used the bell
            execute as @a if score @s Nightrunner_MagicSkillPoints matches 1.. run block check_magic{
                # execute the magic skill function
                function ./collected_points

                # Check level up
                execute if score @s[scores={Nightrunner_MagicSkillLevel=11..}] Nightrunner_MagicSkillPoints matches 120.. run function ./level_up
                execute if score @s Nightrunner_MagicSkillLevel matches 11.. run return 1
                execute if score @s[scores={Nightrunner_MagicSkillLevel=51..}] Nightrunner_MagicSkillPoints matches 250.. run function ./level_up
                execute if score @s Nightrunner_MagicSkillLevel matches 51.. run return 1
                execute if score @s[scores={Nightrunner_MagicSkillLevel=101..}] Nightrunner_MagicSkillPoints matches 400.. run function ./level_up
                execute if score @s Nightrunner_MagicSkillLevel matches 101.. run return 1
                execute if score @s Nightrunner_MagicSkillPoints matches 50.. run function ./level_up

                # MARK: Check Max mana
                execute as @a run block mana_check{
                    # Make sure player has base max mana
                    execute unless score @s Nightrunner_ManaMaxBase matches 0.. run scoreboard players set @s Nightrunner_ManaMaxBase 20

                    # Add base to max mana
                    execute as @s run scoreboard players operation @s Nightrunner_ManaMax = @s Nightrunner_ManaMaxBase
                    # Check wizard armor bonus
                    execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_boots",Slot:100b,components:{"minecraft:custom_data":{wizard_boots:1b}}}]}] run scoreboard players add @s Nightrunner_ManaMax 5
                    execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_leggings",Slot:101b,components:{"minecraft:custom_data":{wizard_leggings:1b}}}]}] run scoreboard players add @s Nightrunner_ManaMax 5
                    execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_chestplate",Slot:102b,components:{"minecraft:custom_data":{wizard_chestplate:1b}}}]}] run scoreboard players add @s Nightrunner_ManaMax 5
                    execute as @s if entity @s[nbt={Inventory:[{id:"minecraft:leather_helmet",Slot:103b,components:{"minecraft:custom_data":{wizard_helmet:1b}}}]}] run scoreboard players add @s Nightrunner_ManaMax 5

                    # Check wizard armor set bonus
                    scoreboard players set @s Nightrunner_WizardArmorSetBonus 0
                    execute if entity @s[nbt={Inventory:[{id:"minecraft:leather_boots",Slot:100b,components:{"minecraft:custom_data":{wizard_boots:1b}}}]}] run scoreboard players add @s Nightrunner_WizardArmorSetBonus 1
                    execute if entity @s[nbt={Inventory:[{id:"minecraft:leather_leggings",Slot:101b,components:{"minecraft:custom_data":{wizard_leggings:1b}}}]}] run scoreboard players add @s Nightrunner_WizardArmorSetBonus 1
                    execute if entity @s[nbt={Inventory:[{id:"minecraft:leather_chestplate",Slot:102b,components:{"minecraft:custom_data":{wizard_chestplate:1b}}}]}] run scoreboard players add @s Nightrunner_WizardArmorSetBonus 1
                    execute if entity @s[nbt={Inventory:[{id:"minecraft:leather_helmet",Slot:103b,components:{"minecraft:custom_data":{wizard_helmet:1b}}}]}] run scoreboard players add @s Nightrunner_WizardArmorSetBonus 1

                    # Apply wizard armor set bonus
                    execute as @s if score @s Nightrunner_WizardArmorSetBonus matches 4.. run scoreboard players add @s Nightrunner_ManaMax 5
                }
            }
        }
        clock wizard_armor_mana_regen 60s{
            execute as @a run execute if score @s Nightrunner_WizardArmorSetBonus matches 4.. run block{
                function nightrunner:items/add_mana {"amount":1}
                execute at @s run playsound minecraft:entity.player.levelup master @s ~ ~ ~ 0.1 2
            }
        }
        function collected_points{
        }
        function level_up{
            # add a level
            scoreboard players add @s Nightrunner_MagicSkillLevel 1
            # reset the points
            scoreboard players reset @s Nightrunner_MagicSkillPoints
            # reset the last update points
            scoreboard players set @s Nightrunner_MagicSkillPointsLastUpdate 0
            # play level up sound
            execute at @s run playsound minecraft:entity.player.levelup player @a ~ ~ ~ 0.5 0.8
            # show level up message
            tellraw @s [{"text":"✨ Magic Skill Leveled Up! ","color":"light_purple","bold":true,"italic":true},{"text":"[Lvl ","color":"aqua"},{"score":{"name":"@s","objective":"Nightrunner_MagicSkillLevel"}},{"text":"]","color":"aqua"}]
            # broadcast the magic skill
            scoreboard players operation @s Nightrunner_MagicLevelModulus = @s Nightrunner_MagicSkillLevel
            scoreboard players set $Nightrunner Nightrunner_MagicLevelModulus 5
            scoreboard players operation @s Nightrunner_MagicLevelModulus %= $Nightrunner Nightrunner_MagicLevelModulus
            execute if score @s Nightrunner_MagicLevelModulus matches 0 run tag @s add broadcaster
            execute if score @s Nightrunner_MagicLevelModulus matches 0 run tellraw @a[tag=!broadcaster] [{"selector":"@s"},{"text":" has leveled up their Magic Skill! Now at ","color":"green"},{"text":"[Lvl ","color":"yellow"},{"score":{"name":"@s","objective":"Nightrunner_MagicSkillLevel"},"color":"yellow"},{"text":"]","color":"yellow"}]
            execute if score @s Nightrunner_MagicLevelModulus matches 0 run tag @s remove broadcaster

            # Milestone lvl 20
            execute if score @s Nightrunner_MagicSkillLevel matches 20 run block{
                title @s title {"text":"🎉 Milestone Achieved! 🎉","color":"gold"}
                title @s subtitle {"text":"When a nearby player picks up mana, you receive half of it!","color":"light_purple"}
                title @s times 20 140 20
                tellraw @s [{"text":"🎉 Milestone Reached! 🎉","color":"gold","bold":true}]
                tellraw @s [{"text":"When a nearby player picks up mana, you receive half of it!","color":"light_purple"}]
            }
        }
    }
}
#=================================================
# MARK: Utils
#=================================================
dir utils{
    function partial_check{
        summon marker ~ ~ ~ {Tags:["partial_check"]}
        scoreboard players set #100 nightrunner.internal 100
        # Slab check
        execute if block ~ ~ ~ #minecraft:slabs as @e[type=marker,tag=partial_check] run block partial_slab_check{
            # If double slab then return
            execute if block ~ ~ ~ #minecraft:slabs[type=double] run return run scoreboard players set $Nightrunner Nightrunner_Item_Ray_steps 0

            execute store result score .y nightrunner.internal run data get entity @s Pos[1] 100
            scoreboard players operation .y nightrunner.internal %= #100 nightrunner.internal

            # If the block is a top slab
            execute store result score .slab nightrunner.internal if block ~ ~ ~ #minecraft:slabs[type=bottom]

            # If the block is a bottom slab
            execute if score .slab nightrunner.internal matches 1 if score .y nightrunner.internal matches ..50 run return run scoreboard players set $Nightrunner Nightrunner_Item_Ray_steps 0
            # If the block is a top slab
            execute if score .slab nightrunner.internal matches 0 if score .y nightrunner.internal matches 49.. run return run scoreboard players set $Nightrunner Nightrunner_Item_Ray_steps 0
        }
        # Stairs check
        execute if block ~ ~ ~ #minecraft:stairs as @e[type=marker,tag=partial_check] run block partial_stairs_check{
            # Get position
            execute store result score #x nightrunner.internal run data get entity @s Pos[0] 100
            execute store result score .y nightrunner.internal run data get entity @s Pos[1] 100
            execute store result score #z nightrunner.internal run data get entity @s Pos[2] 100
            # Convert to local position
            scoreboard players operation #x nightrunner.internal %= #100 nightrunner.internal
            scoreboard players operation .y nightrunner.internal %= #100 nightrunner.internal
            scoreboard players operation #z nightrunner.internal %= #100 nightrunner.internal
            scoreboard players set #bool nightrunner.internal 0
            # Rotation handler
            scoreboard players operation .x nightrunner.internal = #x nightrunner.internal
            scoreboard players operation .z nightrunner.internal = #z nightrunner.internal
            execute if block ~ ~ ~ #minecraft:stairs[facing=north] run function ./rotate_90
            execute if block ~ ~ ~ #minecraft:stairs[facing=west] run function ./rotate_180
            execute if block ~ ~ ~ #minecraft:stairs[facing=south] run function ./rotate_270
            # Shape = straight
            execute if score .x nightrunner.internal matches 55.. run scoreboard players set #bool nightrunner.internal 1
            # Shapes
            execute if block ~ ~ ~ #minecraft:stairs[shape=inner_left] if score .z nightrunner.internal matches ..45 run scoreboard players set #bool nightrunner.internal 1
            execute if block ~ ~ ~ #minecraft:stairs[shape=inner_right] if score .z nightrunner.internal matches 55.. run scoreboard players set #bool nightrunner.internal 1
            execute if block ~ ~ ~ #minecraft:stairs[shape=outer_left] if score .z nightrunner.internal matches 45.. run scoreboard players set #bool nightrunner.internal 0
            execute if block ~ ~ ~ #minecraft:stairs[shape=outer_right] if score .z nightrunner.internal matches ..55 run scoreboard players set #bool nightrunner.internal 0
            # Bottom step
            execute store result score #type nighrunner.internal if block ~ ~ ~ #minecraft:stairs[half=bottom]
            execute if score #type nighrunner.internal matches 1 if score .y nightrunner.internal matches ..55 run scoreboard players set #bool nightrunner.internal 1
            execute if score #type nighrunner.internal matches 0 if score .y nightrunner.internal matches 45.. run scoreboard players set #bool nightrunner.internal 1

            execute if score #bool nightrunner.internal matches 1 run return run scoreboard players set $Nightrunner Nightrunner_Item_Ray_steps 0
        }
        # Door check
        execute if block ~ ~ ~ #minecraft:doors as @e[type=marker,tag=partial_check] run block partial_door_check{
            # Get position
            execute store result score #x nightrunner.internal run data get entity @s Pos[0] 100
            execute store result score #z nightrunner.internal run data get entity @s Pos[2] 100
            # Convert to local position
            scoreboard players operation #x nightrunner.internal %= #100 nightrunner.internal
            scoreboard players operation #z nightrunner.internal %= #100 nightrunner.internal
            scoreboard players set #bool nightrunner.internal 0
            # Rotation handler
            scoreboard players operation .x nightrunner.internal = #x nightrunner.internal
            scoreboard players operation .z nightrunner.internal = #z nightrunner.internal
            execute if block ~ ~ ~ #minecraft:doors[facing=north] run function ./rotate_90
            execute if block ~ ~ ~ #minecraft:doors[facing=west] run function ./rotate_180
            execute if block ~ ~ ~ #minecraft:doors[facing=south] run function ./rotate_270

            execute if block ~ ~ ~ #minecraft:doors[hinge=left,open=true] if score .z nightrunner.internal matches ..25 run scoreboard players set #bool nightrunner.internal 1
            execute if block ~ ~ ~ #minecraft:doors[hinge=right,open=true] if score .z nightrunner.internal matches 75.. run scoreboard players set #bool nightrunner.internal 1
            execute if block ~ ~ ~ #minecraft:doors[open=false] if score .x nightrunner.internal matches ..25 run scoreboard players set #bool nightrunner.internal 1

            execute if score #bool nightrunner.internal matches 1 run return run scoreboard players set $Nightrunner Nightrunner_Item_Ray_steps 0
        }
        kill @e[type=marker,tag=partial_check,sort=nearest,limit=1]
    }
    function rotate_90{
        scoreboard players set .x nightrunner.internal 100
        scoreboard players operation .x nightrunner.internal -= #z nightrunner.internal
        scoreboard players operation .z nightrunner.internal = #x nightrunner.internal
    }
    function rotate_180{
        scoreboard players set .x nightrunner.internal 100
        scoreboard players set .z nightrunner.internal 100
        scoreboard players operation .x nightrunner.internal -= #x nightrunner.internal
        scoreboard players operation .z nightrunner.internal -= #z nightrunner.internal
    }
    function rotate_270{
        scoreboard players set .z nightrunner.internal 100
        scoreboard players operation .x nightrunner.internal = #z nightrunner.internal
        scoreboard players operation .z nightrunner.internal -= #x nightrunner.internal
    }
    function set_health_manual{
        # Update the max health score
        $scoreboard players set @s Nightrunner_MaxHealth $(max_health)
        # Update the max health attribute
        $attribute @s minecraft:generic.max_health base set $(max_health)
    }
}
#=================================================
# MARK: Advacements
#=================================================
# Grave interaction
advancement interacted_with_grave{
    "criteria": {
      "requirement": {
        "trigger": "minecraft:player_interacted_with_entity",
        "conditions": {
          "entity": {
            "type": "minecraft:interaction",
            "nbt": "{Tags:[GraveInteractable]}"
          }
        }
      }
    },
    "rewards": {
      "function": "nightrunner:health_system/interacted_with_grave"
    }
}
# Cauldron craft interaction [right click]
advancement interacted_with_cauldron_right{
    "criteria": {
      "requirement": {
        "trigger": "minecraft:player_interacted_with_entity",
        "conditions": {
          "entity": {
            "type": "minecraft:interaction",
            "nbt": "{Tags:[CauldronCraftInteractable]}"
          }
        }
      }
    },
    "rewards": {
      "function": "nightrunner:crafting/cauldroncraft/right_clicked"
    }
}
# Cauldron craft interaction [left click]
advancement interacted_with_cauldron_left{
    "criteria": {
      "requirement": {
        "trigger": "minecraft:player_hurt_entity",
        "conditions": {
          "entity": {
            "type": "minecraft:interaction",
            "nbt": "{Tags:[CauldronCraftInteractable]}"
          }
        }
      }
    },
    "rewards": {
      "function": "nightrunner:crafting/cauldroncraft/left_clicked"
    }
}
# Heartfruit
advancement used_heartfruit{
    "criteria": {
    "use_item": {
    "trigger": "minecraft:consume_item",
    "conditions": {
        "item": {
        "predicates": {
            "minecraft:custom_data": {"heartfruit":true}
        }
        }
    }
    }
},
"rewards": {
    "function": "nightrunner:items/consumables/heartfruit/apply"
}
}
# Heartfruit Plus
advancement used_heartfruit_plus{
    "criteria": {
    "use_item": {
    "trigger": "minecraft:consume_item",
    "conditions": {
        "item": {
        "predicates": {
            "minecraft:custom_data": {"heartfruit_plus":true}
        }
        }
    }
    }
},
"rewards": {
    "function": "nightrunner:items/consumables/heartfruit_plus/apply"
}
}
#=================================================
# MARK: Predicates
#=================================================
# If interaction is right clicked
predicate interaction_right_clicked{
  "condition": "minecraft:entity_properties",
  "entity": "this",
  "predicate": {
    "nbt": "{interaction:{}}"
  }
}
# If interaction is left clicked
predicate interaction_left_clicked{
  "condition": "minecraft:entity_properties",
  "entity": "this",
  "predicate": {
    "nbt": "{attack:{}}"
  }
}
# 10% chance
predicate 10change{
  "condition": "minecraft:random_chance",
  "chance": 0.1
}
# 35% chance
predicate 35change{
  "condition": "minecraft:random_chance",
  "chance": 0.35
}
# 50% chance
predicate 50change{
  "condition": "minecraft:random_chance",
  "chance": 0.5
}
# 66% chance
predicate 66change{
  "condition": "minecraft:random_chance",
  "chance": 0.66
}
# 75% chance
predicate 75change{
  "condition": "minecraft:random_chance",
  "chance": 0.75
}
#=================================================
# MARK: Item modifiers
#=================================================
item_modifier damage_item{
    "function": "minecraft:set_damage",
    "damage": -0.01,
    "add": true
}
#=================================================
# MARK: Tags
#=================================================
tag entity_type not_mob{
    minecraft:item
    minecraft:item_frame
    minecraft:glow_item_frame
    minecraft:area_effect_cloud
    minecraft:armor_stand
    minecraft:arrow
    minecraft:boat
    minecraft:dragon_fireball
    minecraft:egg
    minecraft:evoker_fangs
    minecraft:falling_block
    minecraft:fireball
    minecraft:firework_rocket
    minecraft:lightning_bolt
    minecraft:ender_pearl
    minecraft:small_fireball
    minecraft:eye_of_ender
    minecraft:potion
    minecraft:firework_rocket
    minecraft:leash_knot
    minecraft:llama_spit
    minecraft:painting
    minecraft:shulker_bullet
    minecraft:snowball
    minecraft:spectral_arrow
    minecraft:trident
    minecraft:tnt
    minecraft:minecart
    minecraft:command_block_minecart
    minecraft:furnace_minecart
    minecraft:spawner_minecart
    minecraft:hopper_minecart
    minecraft:chest_minecart
    minecraft:tnt_minecart
    minecraft:wither_skull
    minecraft:experience_orb
    minecraft:marker
    minecraft:experience_bottle
}
tag entity_type enemy{
    minecraft:zombie
    minecraft:skeleton
    minecraft:husk
    minecraft:drowned
    minecraft:zombie_villager
    minecraft:stray
    minecraft:spider
    minecraft:cave_spider
    minecraft:enderman
    minecraft:endermite
    minecraft:blaze
    minecraft:ghast
    minecraft:guardian
    minecraft:elder_guardian
    minecraft:shulker
    minecraft:slime
    minecraft:magma_cube
    minecraft:witch
    minecraft:vindicator
    minecraft:evoker
    minecraft:pillager
    minecraft:illusioner
    minecraft:ravager
    minecraft:hoglin
    minecraft:zoglin
    minecraft:zombified_piglin
    minecraft:creeper
    minecraft:wither_skeleton
    minecraft:bogged
}
tag entity_type not_mob_create_support{
    create:carriage_contraption
    create:contraption
    create:potato_projectile
    create:crafting_blueprint
    create:gantry_contraption
    create:seat
    create:super_glue
}
tag block air{
    minecraft:air
    minecraft:void_air
    minecraft:cave_air
    minecraft:water
    minecraft:lava
    #minecraft:buttons
    #minecraft:candles
    #minecraft:cave_vines
    minecraft:short_grass
    minecraft:dead_bush
    minecraft:brown_mushroom
    minecraft:red_mushroom
    minecraft:lily_pad
    minecraft:pointed_dripstone
    minecraft:snow
    #minecraft:small_flowers
    #minecraft:tall_flowers
    #minecraft:small_dripleaf_placeable
    minecraft:fern
    minecraft:fire
    minecraft:tall_grass
    minecraft:large_fern
    minecraft:vine
    minecraft:twisting_vines
    minecraft:twisting_vines_plant
    minecraft:weeping_vines
    minecraft:weeping_vines_plant
    #minecraft:crops
    #minecraft:fire
    #minecraft:flowers
    #minecraft:pressure_plates
    #minecraft:rails
    #minecraft:saplings
    #minecraft:signs
    minecraft:attached_melon_stem
    minecraft:attached_pumpkin_stem
    minecraft:nether_wart
    minecraft:sweet_berry_bush
    minecraft:cocoa
    minecraft:sugar_cane
    minecraft:seagrass
    minecraft:tall_seagrass
    minecraft:redstone_wire
    minecraft:rail
    minecraft:powered_rail
    minecraft:activator_rail
    minecraft:detector_rail
    minecraft:torch
    minecraft:soul_torch
    minecraft:redstone_torch
    minecraft:glow_lichen
    minecraft:comparator
    minecraft:repeater
    minecraft:lever
    minecraft:tripwire
    minecraft:tripwire_hook
    #minecraft:wall_signs
    #minecraft:banners
    #minecraft:corals
    minecraft:end_rod
    minecraft:scaffolding
    minecraft:campfire
    minecraft:soul_campfire
    minecraft:bamboo
    #minecraft:beds
    minecraft:kelp
    minecraft:kelp_plant
    minecraft:sea_pickle
    minecraft:chorus_flower
    minecraft:chorus_plant
    minecraft:beetroots
    minecraft:carrots
    minecraft:potatoes
    minecraft:wheat
    minecraft:melon_stem
    minecraft:pumpkin_stem
    #minecraft:trapdoors
    minecraft:cobweb
    #nightrunner:partial
}
tag block partial{
    #minecraft:slabs
    #minecraft:stairs
    #minecraft:doors
}
tag entity_type zombies{
    minecraft:zombie
    minecraft:husk
    minecraft:drowned
    minecraft:zombie_villager
}
#=================================================
# MARK: Enchantments
#=================================================
enchantment mana_state{
  "description": "Nightrunner info",
  "supported_items": [
    "minecraft:poisonous_potato",
    "minecraft:warped_fungus_on_a_stick"
  ],
  "weight": 1,
  "max_level": 1,
  "min_cost": {
    "base": 0,
    "per_level_above_first": 0
  },
  "max_cost": {
    "base": 0,
    "per_level_above_first": 0
  },
  "anvil_cost": 0,
  "slots": [
    "mainhand",
    "offhand"
  ],
  "effects": {
    "minecraft:tick": [
      {
        "effect": {
          "type": "minecraft:run_function",
          "function": "nightrunner:items/consumables/show_mana_state"
        }
      }
    ]
  }
}
enchantment mana_efficiency{
  "description": "Mana Efficiency (Half-Cost Chance)",
  "supported_items": "minecraft:warped_fungus_on_a_stick",
  "weight": 1,
  "max_level": 3,
  "min_cost": {
    "base": 0,
    "per_level_above_first": 0
  },
  "max_cost": {
    "base": 0,
    "per_level_above_first": 0
  },
  "anvil_cost": 2,
  "slots": []
}
enchantment damage_item_on_attack{
  "description": "damage_item_on_attack",
  "supported_items": "minecraft:warped_fungus_on_a_stick",
  "weight": 1,
  "max_level": 1,
  "min_cost": {
    "base": 0,
    "per_level_above_first": 0
  },
  "max_cost": {
    "base": 0,
    "per_level_above_first": 0
  },
  "anvil_cost": 0,
  "slots": [],
  "effects": {
    "minecraft:post_attack": [
      {
        "enchanted": "attacker",
        "affected": "attacker",
        "effect": {
          "type": "minecraft:damage_item",
          "amount": 1
        }
      },
      {
        "enchanted": "attacker",
        "affected": "attacker",
        "effect": {
          "type": "minecraft:summon_entity",
          "entity": "minecraft:boat"
        }
      }
    ]
  }
}
