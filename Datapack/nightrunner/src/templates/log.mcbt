# Logging template

# Syntax:
# - log <type> <text>

# Accepted types:
# - info
# - warning
# - error
# - debug
# - function

# Example:
# - log info This is an info message

template log {
    with log_type:word log_text:raw {
        <%%
            let log_json = ["",{"text":"LOG","color":"dark_gray"},{"text":" | ","color":"white"}]

            switch (log_type) {
                case "info":
                    log_json.push({"text":"info","color":"aqua"})
                    break

                case "warning":
                    log_json.push({"text":"warn","color":"gold"})
                    break

                case "error":
                    log_json.push({"text":"error","color":"red"})
                    break

                case "debug":
                    log_json.push({"text":"debug","color":"blue"})
                    break

                case "function":
                    log_json.push({"text":`${meta.func.namespace}:${meta.func._path}`,"color":"yellow"})
                    break

                default:
                    throw new Error(`[LOG MACRO]: Invalid log type '${log_type}'`)
                    break
            }

            log_json.push({"text":" Â» ","color":"dark_gray"})

            log_json.push({"text":log_text,"color":"white"})

            emit(`tellraw @a ${JSON.stringify(log_json)}`)
        %%>
    }
}